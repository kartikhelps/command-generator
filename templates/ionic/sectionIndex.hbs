import { IonButton, IonCheckbox, IonContent, IonGrid, IonText, IonToast } from "@ionic/react";
import { useEffect, useState } from "react";
import { Link, useHistory } from "react-router-dom";
import { IonIcon } from '@ionic/react';


{{#if (getIconNames data)}}
import { {{getIconNames data }} } from 'ionicons/icons';
{{else}} 

{{/if}}

{{#each data}}
{{#switch type}}
  {{#case "Nav"}}
import {{@root.name}}Nav from "./{{@root.name}}Nav";
  {{/case}}
  {{#case "Form"}}
import {{@root.name}}Form from "./{{@root.name}}Form";
  {{/case}}
  {{#case "Banner"}}
import {{@root.name}}Banner from "./{{@root.name}}Banner";
  {{/case}}
  {{#case "Footer"}}
  import {{@root.name}}Footer from "./{{@root.name}}Footer";
    {{/case}}
    {{#case "DisplayList1"}}
    import {{@root.name}}List from "./{{@root.name}}List";
      {{/case}}
      {{#case "DisplayList2"}}
    import {{@root.name}}List from "./{{@root.name}}List";
      {{/case}}
      {{#case "Box"}}
      import {{@root.name}}Box from "./{{@root.name}}Box";
        {{/case}}
       {{#case "Infobox"}}
      import {{@root.name}}Infobox from "./{{@root.name}}Infobox";
        {{/case}}  
         {{#case "HeadingBox"}}
      import {{@root.name}}HeadingBox from "./{{@root.name}}HeadingBox";
        {{/case}}
        {{#case "ImageSlider"}}
      import {Slider} from "./Slider";
        {{/case}}

{{/switch}}
{{/each}}

function {{name}}({ setSection, vars }) {
  const history = useHistory();
  const [toastOpen, setToastOpen] = useState(false);
  const [toastMessage, setToastMessage] = useState("");
  const [toastColor, setToastColor] = useState("");

  {{#each data}}
  {{#switch type}}
  {{#case "Textbox"}}
  {{#each fields}}
  {{#ifeq "Button" fieldType}}
  const {{name}}handle= (e) =>{
    {{#each action.Actions}}

    {{#ifeq type "ShowSection"}}
         setSection((prev)=>({...prev, {{{objToString fields}}} }))
    {{/ifeq}}
    {{#ifeq type "Redirect"}}
        history.push('/{{fields.url}}')
    {{/ifeq}}
    {{/each}}
  }
  {{/ifeq}}
  {{/each}}
  {{/case}}
  {{/switch}}
  {{/each}}


  return (
    <>

        {{#each data}}
        {{#switch type}}
        {{#case "Nav"}}
          <{{@root.name}}Nav vars={vars} setSection={setSection} />
            {{create fields "./templates/ionic/navbar.hbs" (concat @root.path "/") (concat @root.name "Nav.tsx") @root.name}}
          {{/case}}
          {{#case "Footer"}}
          <{{@root.name}}Footer vars={vars} setSection={setSection} />
            {{create fields "./templates/ionic/footer.hbs" (concat @root.path "/") (concat @root.name "Footer.tsx") @root.name}}
          {{/case}}
          {{#case "Form"}}
          <{{@root.name}}Form vars={vars} setSection={setSection} />
           {{create fields "./templates/ionic/form.hbs" (concat @root.path "/") (concat @root.name "Form.tsx") @root.name}}
          {{/case}}
          {{#case "DisplayList1"}}
          <{{@root.name}}List vars={vars} setSection={setSection} />
           {{create fields "./templates/ionic/cardlist1.hbs" (concat @root.path "/") (concat @root.name "List.tsx") @root.name}}
          {{/case}}
          {{#case "DisplayList2"}}
          <{{@root.name}}List vars={vars} setSection={setSection} />
           {{create fields "./templates/ionic/cardlist2.hbs" (concat @root.path "/") (concat @root.name "List.tsx") @root.name}}
          {{/case}}
          {{#case "Box"}}
          <{{@root.name}}Box vars={vars} setSection={setSection} />
           {{create fields "./templates/ionic/box.hbs" (concat @root.path "/") (concat @root.name "Box.tsx") @root.name}}
          {{/case}}
          {{#case "Infobox"}}
          <{{@root.name}}Infobox vars={vars} setSection={setSection} />
           {{create fields "./templates/ionic/infobox.hbs" (concat @root.path "/") (concat @root.name "Infobox.tsx") @root.name}}
          {{/case}}
           {{#case "HeadingBox"}}
          <{{@root.name}}HeadingBox vars={vars} setSection={setSection} />
           {{create fields "./templates/ionic/headingbox.hbs" (concat @root.path "/") (concat @root.name "HeadingBox.tsx") @root.name}}
          {{/case}}
          {{#case "ImageSlider"}}
          <Slider 
          props={ {{ fields.[0].mapField }}  }
          />
           {{create fields "./templates/ionic/slider.hbs" (concat @root.path "/") "Slider.js" @root.name}}
           {{create fields "./templates/ionic/diffslider.hbs" (concat @root.path "/") "DiffSlider.js" @root.name}}
          {{/case}}
          
          {{#case "Banner"}}
          <{{@root.name}}Banner vars={vars} setSection={setSection} />
           {{create fields "./templates/ionic/banner.hbs" (concat @root.path "/") (concat @root.name "Banner.tsx") @root.name}}
          {{/case}}
          {{#case "Textbox"}}
          {{#each fields}}
          {{#ifeq "Button" fieldType}}
          <div>
            <button type="submit" onClick={ {{name}}handle } >
              {{label}}
            </button>
          </div>
          {{/ifeq}}
        
          {{#ifeq "text" fieldType}}
          <div>
            {{label}}
          </div>
          {{/ifeq}}
          {{#ifeq "LIconText" fieldType}}
          <div style={ {display: "flex",alignItems: "center"} }>
            <IonIcon icon={ {{name}} } style={ { marginRight: '10px' } } />
            <div className="content">{{label}}</div>
          </div>
          {{/ifeq}}
          {{#ifeq "RIconText" fieldType}}
          <div style={ {display: "flex",alignItems: "center"} }>
            <div className="content"> {{label}} </div>
            <IonIcon icon={ {{name}} } style={ { marginLeft: '10px' } } />
          </div>
          {{/ifeq}}
            {{/each}}
          {{/case}}
        {{/switch}}
        {{/each}}
    </>
  );
}

export default {{name}};
